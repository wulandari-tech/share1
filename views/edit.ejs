<%- include('./partials/header') %>

<div class="max-w-3xl mx-auto bg-gray-800 p-8 rounded-xl shadow-2xl">
  <h1 class="text-4xl font-bold text-center mb-8 text-primary-400">Edit "<%= code.title %>"</h1>
  
  <form id="editForm" action="/codes/<%= code._id %>?_method=PUT" method="POST" enctype="multipart/form-data" class="space-y-6">
    <div>
      <label for="title" class="block text-sm font-medium text-gray-300 mb-1">Title</label>
      <input type="text" name="title" id="title" required value="<%= code.title %>"
             class="w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-gray-100 focus:ring-2 focus:ring-primary-500 focus:border-primary-500" />
    </div>
    
    <div>
      <label for="description" class="block text-sm font-medium text-gray-300 mb-1">Description</label>
      <textarea name="description" id="description" rows="3"
                class="w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-gray-100 focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><%= code.description %></textarea>
    </div>
    
    <div>
      <label for="snippetLanguage-select" class="block text-sm font-medium text-gray-300 mb-1">Code Language (for snippet)</label>
      <select name="snippetLanguage" id="snippetLanguage-select" <!-- Updated name and id -->
              class="w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-gray-100 focus:ring-2 focus:ring-primary-500 focus:border-primary-500">
        <% const langOpts = ["plaintext", "javascript", "htmlmixed", "css", "python", "java", "c", "cpp", "php", "ruby", "go", "rust", "swift", "kotlin", "sql", "markdown", "json", "yaml", "shell"]; %>
        <% const langDisplay = { "java": "Java (text/x-java)", "c": "C (text/x-csrc)", "cpp": "C++ (text/x-c++src)", "htmlmixed": "HTML" }; %>
        <% langOpts.forEach(opt => { %>
          <option value="<%= opt %>" <%= (code.snippetLanguage === opt || (opt === 'java' && code.snippetLanguage === 'text/x-java') || (opt === 'c' && code.snippetLanguage === 'text/x-csrc') || (opt === 'cpp' && code.snippetLanguage === 'text/x-c++src') ) ? 'selected' : '' %>>
            <%= langDisplay[opt] || opt.charAt(0).toUpperCase() + opt.slice(1) %>
          </option>
        <% }) %>
      </select>
    </div>
    
    <div>
      <label for="code-editor" class="block text-sm font-medium text-gray-300 mb-1">Code Snippet</label>
      <!-- The initial value for 'real-content' will be set by JS if fetched -->
      <textarea name="content" id="real-content" class="hidden"><%= code.fetchedSnippetContentForEdit || (code.isSnippetTextFile ? '' : 'Error: Snippet not loaded or this is not a text snippet.') %></textarea>
      <textarea id="code-editor" class="w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-gray-100"></textarea>
    </div>

    <div>
      <label for="file" class="block text-sm font-medium text-gray-300 mb-1">Replace File (Optional)</label>
      <input type="file" name="file" id="file" 
             class="w-full text-gray-300 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-semibold file:bg-primary-500 file:text-white hover:file:bg-primary-600" />
      <% if (code.fileUrl && code.fileName) { %>
        <p class="mt-1 text-sm text-gray-400">Current file: 
            <a href="<%= code.fileUrl %>" target="_blank" class="text-primary-400 hover:underline"><%= code.fileName %></a>
            (<%= code.isSnippetTextFile ? 'Snippet as Text File' : 'Uploaded File' %>)
        </p>
        <div class="mt-2 flex items-center">
            <input id="removeFile" name="removeFile" type="checkbox" class="h-4 w-4 text-red-600 border-gray-500 rounded focus:ring-red-500">
            <label for="removeFile" class="ml-2 block text-sm text-red-400">Remove current file (snippet or uploaded)</label>
        </div>
      <% } %>
    </div>

    <div class="flex items-center">
      <input id="isPublic" name="isPublic" type="checkbox" <%= code.isPublic ? 'checked' : '' %>
             class="h-4 w-4 text-primary-600 border-gray-500 rounded focus:ring-primary-500">
      <label for="isPublic" class="ml-2 block text-sm text-gray-300">
        Make this public (Uncheck for private)
      </label>
    </div>

    <div class="pt-2 flex space-x-4">
      <button id="submitBtn" type="submit" 
              class="flex-1 bg-green-600 hover:bg-green-700 text-white font-bold py-3 px-6 rounded-lg transition duration-150 ease-in-out text-lg flex items-center justify-center">
        <i class="fas fa-save mr-2"></i> Save Changes
      </button>
      <a href="/codes/view/<%= code._id %>" class="flex-1 text-center bg-gray-600 hover:bg-gray-500 text-white font-bold py-3 px-6 rounded-lg transition duration-150 ease-in-out text-lg">
        Cancel
      </a>
    </div>
  </form>
</div>

<script>
  let editor;
  document.addEventListener('DOMContentLoaded', function () {
    let initialCodeMirrorContent = document.getElementById('real-content').value;
    
    let currentSnippetLanguage = "<%= code.snippetLanguage %>";
    let modeForEditor = currentSnippetLanguage;
    if (modeForEditor === 'java') modeForEditor = 'text/x-java';
    if (modeForEditor === 'c') modeForEditor = 'text/x-csrc';
    if (modeForEditor === 'cpp') modeForEditor = 'text/x-c++src';
    
    editor = CodeMirror.fromTextArea(document.getElementById('code-editor'), {
      lineNumbers: true,
      mode: modeForEditor,
      theme: "material-darker",
      lineWrapping: true,
      indentUnit: 2,
      tabSize: 2,
      autoCloseBrackets: true,
      matchBrackets: true,
      value: initialCodeMirrorContent // Set initial value here
    });
    
    const languageSelect = document.getElementById("snippetLanguage-select");
    languageSelect.addEventListener("change", function () {
      let mode = this.value;
      if (mode === 'java') mode = 'text/x-java';
      if (mode === 'c') mode = 'text/x-csrc';
      if (mode === 'cpp') mode = 'text/x-c++src';
      editor.setOption("mode", mode);
    });

    const editForm = document.getElementById("editForm");
    editForm.addEventListener("submit", function () {
      document.getElementById("real-content").value = editor.getValue();
    });
  });
</script>

<%- include('./partials/footer') %>